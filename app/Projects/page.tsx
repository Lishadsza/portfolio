import React from 'react';

const Projects = () => {
  return (
    <div className="container">
      <br />
      <br />
      <br />
      <br />
      <div className="project">
        <h2>Projects</h2>
        {/*Project 1*/}
        <div className='projectitem'>
          <h3>Promptopia</h3>
          <p>
            About:
            Promptopia is your go-to open-source AI prompting tool,
            designed to ignite your creativity.
          </p>
          <p>
            Discover, create,
            and share captivating prompts generated by advanced artificial intelligence.
            Dive into the world of inspiration with Promptopia!
          </p>
          <p>
            Role: Full Stack Developer
          </p>
          <div>
            <p>Technologies Used:</p>
            <ul>
              <ul>Next.js: The foundation for building React applications with server-side rendering.</ul>
              <ul>AI Algorithms: Advanced algorithms power our prompt generation, providing unique and engaging content.</ul>
              <ul>Tailwind CSS: A utility-first CSS framework for building modern and responsive designs.</ul>
            </ul>
          </div>
          <div>
            <p>Outcome:</p>
            <ul>
              <ul>The Promptopia website effectively communicates its purpose as an AI prompting tool for igniting creativity. </ul>
              <ul>It features clear instructions for getting started, guidelines for usage and contributions, and acknowledges the technologies used.</ul>
              <ul>The user-friendly interface and transparent information make it a valuable resource for creative individuals.</ul>
            </ul>
          </div>
          <div>
            <p><a href="https://github.com/gaureshpai/promtopia" target='_blank' rel="noopener noreferrer">GitHub Repository</a></p>
            <p><a href="https://ggpromtopia.vercel.app/" target='_blank' rel="noopener noreferrer">Live Demo</a></p>
          </div>
        </div>
        {/*Project 2*/}
        <div className='projectitem'>
          <h3>Interpretations Management App</h3>
          <p>
            About:
            Effortlessly manage interpretations with this Next.js app backed by AppWriter.
          </p>
          <p>
            View, edit, and delete interpretations with ease.
            Simplify your interpretation management tasks today! üåü
          </p>
          <p>
            This web application allows users to manage interpretations,
            providing a platform to view, edit,
            and delete interpretations stored in the database.
          </p>
          <p>
            It utilizes Next.js for the frontend and AppWriter as the backend service.
          </p>
          <p>
            Role: Full Stack Developer
          </p>
          <div>
            <p>Technologies Used:</p>
            <ul>
              <ul>Frontend: Next.js, React. The foundation for building React applications with server-side rendering.</ul>
              <ul>Backend: AppWriter.</ul>
              <ul>Tailwind CSS: A utility-first CSS framework for building modern and responsive designs.</ul>
            </ul>
          </div>
          <div>
            <p>Features:</p>
            <ul>
              <ul>View Interpretations: üëÄ Users can view a list of interpretations fetched from the backend.</ul>
              <ul>Edit Interpretations: ‚úèÔ∏è Users can navigate to edit interpretation pages for making changes.</ul>
              <ul>Delete Interpretations: üóëÔ∏è Users can delete interpretations directly from the list.</ul>
            </ul>
          </div>
          <div>
            <p>Outcome:</p>
            <ul>
              <ul>The Interpretations Management App is a web application designed for users to manage interpretations.</ul>
              <ul>It offers features such as viewing, editing, and deleting interpretations.</ul>
              <ul>The frontend is built using Next.js and React, while the backend utilizes AppWriter.</ul>
              <ul>Users can easily install and set up the app, and it provides REST API endpoints for fetching and deleting interpretations.</ul>
            </ul>
          </div>
          <div>
            <p><a href="https://github.com/gaureshpai/Interpretations-Management-App" target='_blank' rel="noopener noreferrer">GitHub Repository</a></p>
            <p><a href="https://gginterpretations.vercel.app/" target='_blank' rel="noopener noreferrer">Live Demo</a></p>
          </div>
        </div>        
        {/**Project 3**/} 
        <div className='projectitem'>
          <h3>Java Swing Registration & Quiz App</h3>
          <p>
            About:
            An intuitive Java Swing application for user registration, login, and a fun quiz experience.
            Seamlessly register, login securely, and test your knowledge with an interactive quiz.
            Save user credentials and quiz results for easy access.
          </p>
          <p>
            This Java Swing application provides a sleek and user-friendly interface for user registration, login, and an online quiz.
            It features a modern design with intuitive controls and seamless functionality.
          </p>
          <div>
            <p>Features:</p>
            <ul>
              <ul>üîê User Registration: Easily register with a username, password, security question, and answer.</ul>
              <ul>üîë User Login: Conveniently log in with your registered credentials.</ul>
              <ul>‚ùì Forgot Password: Retrieve your password by answering the security question.</ul>
              <ul>üìù Online Quiz: Engage in an interactive online quiz experience.</ul>
              <ul>üèÜ Quiz Result: View your quiz score along with your name.</ul>
            </ul>
          </div>
          <div>
            <p>How to Use:</p>
            <ul>
              <ul>Registration: Click on the "Register" button. Enter your desired username, password, security question, and answer.
                Click "Register" to complete the registration process.</ul>
              <ul>Login: Enter your username and password. Click "Login" to access your account.</ul>
              <ul>Forgot Password: If you forget your password, click on the "Forgot Password?" button.
                Enter your username and answer the security question to retrieve your password.</ul>
              <ul>Take Quiz: Upon logging in, click on the "Login" button to proceed. Answer the quiz questions.
                Click "Submit" to view your quiz score.</ul>
            </ul>
          </div>
          <div>
            <p>Persistence:</p>
            <ul>
              <ul>üìÑ Registered User Credentials: User registration information is securely saved and can be accessed anytime.</ul>
              <ul>üìä Quiz Results: Your quiz scores are stored with your name for future reference.</ul>
            </ul>
          </div>
          <div>
            <p>File Structure:</p>
            <ul>
              <ul>LoginApp.java: Main class for the login application.</ul>
              <ul>User.java: Class representing a user with registration information.</ul>
              <ul>UserDatabase.java: Class handling user data loading and saving.</ul>
              <ul>ForgotPasswordApp.java: Class for handling password retrieval.</ul>
              <ul>OnlineTest.java: Class for conducting the online quiz.</ul>
            </ul>
          </div>
          <div>
            <p><a href="https://github.com/gaureshpai/Java-Swing-Registration-Quiz-App" target='_blank' rel="noopener noreferrer">GitHub Repository</a></p>
          </div>
        </div>
        {/*Project 4*/}
        <div className='projectitem'>
          <h3>Java Swing Login-Quiz App</h3>
          <p>
            About:
            A user-friendly Java Swing-based login application with password visibility control and "Forgot Password?" recovery. Features secure authentication, clean styling, and an intuitive interface.
          </p>
          <p>
            This is a simple Java Swing-based login application designed for user authentication. The application provides a user interface for entering a username and password, with an option to show/hide the password. Additionally, it includes a "Forgot Password?" feature allowing users to recover their passwords through a security question.
          </p>
          <div>
            <p>Features:</p>
            <ul>
              <ul>Login Form: Users can enter their username and password to log in.</ul>
              <ul>Show Password: Checkbox to toggle the visibility of the entered password.</ul>
              <ul>Forgot Password: Users can recover their passwords by answering a security question.</ul>
              <ul>Styling: The application features a clean and intuitive user interface with proper styling.</ul>
            </ul>
          </div>
          <div>
            <p>How to Run:</p>
            <ul>
              <ul>Ensure you have the Java Development Kit (JDK) installed.</ul>
              <ul>Compile and run the LoginApp class.</ul>
              <code>
                javac LoginApp.java<br />
                java LoginApp
              </code>
              <ul>The application window will appear, allowing users to log in or recover their passwords.</ul>
            </ul>
          </div>
          <div>
            <p><a href="https://github.com/gaureshpai/Java-Swing-Login-Quiz-App" target='_blank' rel="noopener noreferrer">GitHub Repository</a></p>
          </div>
        </div> 
        {/*Project 5*/}
        <div className='projectitem'>
          <h3>HTML Converter</h3>
          <p>
            This Java program converts text files into HTML files, adding basic styling and including the filename as a heading.
          </p>
          <p>
            The Main class in this project takes input from a text file and generates an HTML file with the same content. It adds basic styling to the HTML file and includes the filename as a heading.
          </p>
          <div>
            <p>Usage:</p>
            <ul>
              <ul>Input File: Provide the path or filename of the text file you want to convert when prompted.</ul>
              <ul>Output File: The program generates an HTML file with the same name as the input file but with the .html extension.</ul>
            </ul>
          </div>
          <div>
            <p>Prerequisites:</p>
            <ul>
              <ul>Java Development Kit (JDK) installed on your system.</ul>
              <ul>Eclipse IDE (or any Java IDE) for development.</ul>
            </ul>
          </div>
          <div>
            <p>How to Run:</p>
            <ul>
              <ul>Clone this repository to your local machine.</ul>
              <ul>Open the project in your preferred Java IDE.</ul>
              <ul>Compile and run the Main class.</ul>
              <ul>Follow the instructions to input the filename or path.</ul>
            </ul>
          </div>
          <div>
            <p>Example:</p>
            <p>Suppose you have a text file named example.txt with the content "Hello, world! This is a sample text file." 
              Running the program with example.txt as input will generate example.html containing the HTML representation of the text.</p>
          </div>
          <div>
            <p><a href="https://github.com/gaureshpai/filetohtmlfileconvertor" target='_blank' rel="noopener noreferrer">GitHub Repository</a></p>
          </div>
        </div>

      </div>
    </div>
  );
};

export default Projects;
